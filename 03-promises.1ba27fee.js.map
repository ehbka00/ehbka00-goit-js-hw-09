{"mappings":"YAcA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,WAAsCG,OAA3BT,EAAS,oBAAwBS,OAANR,EAAM,OAEpDM,EAAO,WAAsCE,OAA3BT,EAAS,oBAAwBS,OAANR,EAAM,M,GAEpDA,E,IAvBPS,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAEC,iBAMF,IAJA,IAAMb,EAAQc,SAASC,KAAKC,SAAShB,MAAMiB,OACrCC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,OACnCE,EAASL,SAASC,KAAKC,SAASG,OAAOF,OAEpCG,EAAI,EAAGA,EAAID,EAAQC,IAC1BtB,EAAcsB,EAAI,EAAGpB,EAAQoB,EAAIF,GAC9BG,MAAK,SAAAC,G,OAAUC,QAAQC,IAAIF,E,IAC3BG,OAAM,SAAAC,G,OAASH,QAAQG,MAAMA,E","sources":["src/js/03-promises.js"],"sourcesContent":["document.querySelector('.form').addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const delay = parseInt(this.elements.delay.value);\n  const step = parseInt(this.elements.step.value);\n  const amount = parseInt(this.elements.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(result => console.log(result))\n      .catch(error => console.error(error));\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Promise ${position} resolved after ${delay}ms`);\n      } else {\n        reject(`Promise ${position} rejected after ${delay}ms`);\n      }\n    }, delay);\n  });\n}"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","parseInt","this","elements","value","step","amount","i","then","result","console","log","catch","error"],"version":3,"file":"03-promises.1ba27fee.js.map"}